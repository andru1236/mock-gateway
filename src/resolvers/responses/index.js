import { logger } from "../../infrastructure";

import responseMutations from "./mutations";
import responseQueries from "./queries";
import dbTranslator from "./dbTranslator";
import responseLoaders from "./dataLoader";

const Response = {
  id: (obj) => obj[dbTranslator.response.id],
  name: (obj) => obj.name,
  response: (obj) => obj.response,
  trackingAssignation: async (obj, _, { loaders }) => {
    const trackingList = obj[dbTranslator.response.trackingAssignation];

    return trackingList.map(async (track) => {
      logger.debug(
        `Dataloader get apis for: ${
          track[dbTranslator.trackingAssignation.apiId]
        }`
      );

      const iteratorApi = await loaders.apis.load(
        track[dbTranslator.trackingAssignation.apiId]
      );

      logger.debug(
        `API generated by dataloader: ${JSON.stringify(iteratorApi)}`
      );

      return {
        ...track,
        api: iteratorApi,
      };
    });
  },
  createdOn: (obj) => obj[dbTranslator.response.createdOn],
};

export { Response, responseQueries, responseMutations, responseLoaders };
